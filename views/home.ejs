<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Hello Bulma!</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.0/css/bulma.min.css">
</head>
<style>
    .number {
        border-radius: 50%;
        background-color: white;
    }
    .fa-cog {
        font-size: 300%;
    }
    .fa-cog:hover {
        cursor: pointer;
        animation: rotating 2.5s linear infinite;
	    -webkit-animation: rotating 2.5s linear infinite;
    }
    @keyframes rotating {
	from {
		-webkit-transform: rotate(0deg);
	}

	to {
		-webkit-transform: rotate(360deg);
	}
}

@-webkit-keyframes rotating {
	from {
		-webkit-transform: rotate(0deg);
	}

	to {
		-webkit-transform: rotate(360deg);
	}
}
</style>

<body class="has-background-white">


    <div class="container">
        <div class="section">
            <div class=" box">
                <div class="columns is-vcentered">
                    <div class="column">
                        <h1 class="title is-1  ">PPS Calculator</h1>
                        <h2 class="subtitle is-4 has-text-dark ">A Quick calculator</h1>
                    </div>
                    <div class="column is-one-fifth has-text-centered is-large">
                        <span id="showSettings" >
                        <i class="fas fa-cog "></i></span>
                    </div>
                </div>

            </div>
        </div>

        <div>
            <div id="">

            </div>
        </div>
        <!-- Gbps Forwarding rate increase-->
        <div class="section">
            <div class="columns is-vcentered">
                <div class="column">
                    <div class="field">
                        <label class="label has-text-dark is-size-3 has-text-weight-light">Device forwarding
                            rate</label>
                        <div class="control">
                            <input type="number" class="input" type="text" placeholder="128" id="forwardingRateField">
                        </div>
                        <p class="help has-text-weight-light has-text-dark tag">In Gbps </p>
                    </div>
                </div>
            </div>




            <div class="columns is-vcentered">

                <div class="column">
                    <div class="field ">
                        <label class="label has-text-dark title is-size-3 has-text-weight-light">Data Size <span
                                class="is-size-6">(Just the Data size, we'll do the rest)</span></label>
                        <div class="control">
                            <input type="number" min="46" class="input" type="text" placeholder="46"
                                id="packetSizeField" value="46">

                        </div>
                        <p class="help has-text-weight-light has-text-dark tag">Minimum 46 Bytes </p>
                        <p class="help has-text-weight-light has-text-dark tag">In Bytes </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="section">
            <div class="box has-background-light">
                <h2 class="subtitle is-2 has-text-weight-light has-text-centered" id="result">x</h2>
            </div>
        </div>

    </div>

    <!-- Settings -->
    <div id="settingsMenu" class="modal">
        <div class="modal-background"></div>
        <div class="modal-card">
          <header class="modal-card-head">
            <p class="modal-card-title">Settings</p>
            <button id="closeSettingsMenu" class="delete" aria-label="close"></button>
          </header>
          <section class="modal-card-body">
            <label class="checkbox">
                <input type="checkbox" checked id="layerOneHeaders">
                Layer One Headers (20 Bytes)
            </label>
            <br>
            <label class="checkbox">
                <input type="checkbox" checked id="layerTwoHeaders">
                Layer Two Headers (18 Bytes)
            </label>
            <br>
            <label class="checkbox">
                <input type="checkbox" id="vlanTag">
                802.1Q Tags (4 Bytes)
            </label>
          </section>
          <footer class="modal-card-foot">
            <p class="has-text-dark is-size-6">Created by <span class="has-text-black">Joshua Dean</span> (joshudea) for GVE</p>
          </footer>
        </div>
      </div>

</body>

</html>
<script defer src="https://use.fontawesome.com/releases/v5.14.0/js/all.js"></script>
<script>
    document.getElementById("forwardingRateField");
    document.getElementById("packetSizeField")

    document.getElementsByTagName("BODY")[0].addEventListener("input", function () {

        //Get the Two user input fields from the form
        let forwardingRate = document.getElementById("forwardingRateField").value;
        let packetSize = document.getElementById("packetSizeField").value;

        //Update the fields values with the set options
        packetSize = setOptions(packetSize);

        //Calculate the PPS
        millionPacketsPerSecond = calculatePPS(forwardingRate, packetSize);

        //If the user has entered something in both boxes render the result
        if (forwardingRate != "" && packetSize != "")
            document.getElementById("result").textContent = millionPacketsPerSecond + " Packets Per Second";
    })


    function calculatePPS(forwardingRate, packetSize) {
        //Get the forwarding rate into bits
        let bitsPerSeconds = forwardingRate * 1000000000;

        //Conver the forwarding rate to Bytes
        let bytesPerSecond = bitsPerSeconds / 8;

        //find the number of packets per second
        let packetsPerSecond = bytesPerSecond / packetSize;



        return numberWithCommas(Math.floor(packetsPerSecond));
    }


    function setOptions(packetSize) {
        let layerOneHeaders = document.getElementById("layerOneHeaders").checked;
        let layerTwoHeaders = document.getElementById("layerTwoHeaders").checked;
        let vlanTag = document.getElementById("vlanTag").checked;

        console.log(layerOneHeaders)

        //If the layer one headers are on (Default), add on the 12 Interframe Gap and 8 Byte Preamble
        if (layerOneHeaders == true)
            packetSize = parseInt(packetSize) + 12 + 8;

        if (layerTwoHeaders == true)
            packetSize = parseInt(packetSize) + 6 + 6 + 2 + 4

        if (vlanTag == true)
            packetSize = parseInt(packetSize) + 4;

        checkJumboFrame(packetSize);
        return packetSize
    }

    function checkJumboFrame(packetSize) {
        if (packetSize > 1500)
            alert("Jumbo Frames!")
    }

    function numberWithCommas(x) {
        //Some magic Regex to print the number with commas
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }


    //Modal toggleing code
    let openSettingsButton = document.querySelector('#showSettings');
    openSettingsButton.addEventListener("click", function(){
        modalDlg.classList.add('is-active');
    });
    var modalDlg = document.querySelector('#settingsMenu');
    var imageModalCloseBtn = document.querySelector('#closeSettingsMenu');
    imageModalCloseBtn.addEventListener('click', function(){
    modalDlg.classList.remove('is-active');
    });
</script>